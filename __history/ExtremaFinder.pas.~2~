unit ExtremaFinder;

interface
  uses List, Calculator;

  Procedure FindExtremums(DotArray: TDotArray;
                          var MinExtrList, MaxExtrList: TList;
                          XFrom: Integer; Range: Real);

implementation
  Procedure FindExtremums(DotArray: TDotArray;
            var MinExtrList, MaxExtrList: TList;
            XFrom: Integer; Range: Real);
    Begin
      for var I := Low(DotArray) + 1 to High(DotArray) - 1 do
        Begin
          if (DotArray[I] > DotArray[I + 1]) and
             (DotArray[I] > DotArray[I - 1]) then
            MaxExtrList.Add(XFrom + Range * I, DotArray[I]);
          if (DotArray[I] < DotArray[I + 1]) and
             (DotArray[I] < DotArray[I - 1]) then
            MinExtrList.Add(XFrom + Range * I, DotArray[I]);
        End;
    End;
end.
